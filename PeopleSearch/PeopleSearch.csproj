<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>netcoreapp2.1</TargetFramework>
    <TypeScriptToolsVersion>3.1</TypeScriptToolsVersion>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
  </PropertyGroup>

  <ItemGroup>
    <None Remove="src\app\address.ts" />
    <None Remove="src\app\image.ts" />
    <None Remove="src\app\interest.ts" />
    <None Remove="src\app\services\person.service.spec.ts" />
    <None Remove="src\app\testing\array-helper.ts" />
    <None Remove="src\app\testing\async-observable-helper.ts" />
    <None Remove="src\app\testing\file.ts" />
    <None Remove="src\app\testing\string-generation-helper.ts" />
  </ItemGroup>

  <ItemGroup>
    <Folder Include="wwwroot\" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.AspNetCore.App" />
    <PackageReference Include="Microsoft.AspNetCore.Razor.Design" Version="2.1.2" PrivateAssets="All" />
    <PackageReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Design" Version="2.1.5" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="2.1.4">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
    </PackageReference>
  </ItemGroup>

  <ItemGroup>
    <TypeScriptCompile Include="src\app\models\address.ts" />
    <TypeScriptCompile Include="src\app\models\image.ts" />
    <TypeScriptCompile Include="src\app\models\interest.ts" />
    <TypeScriptCompile Include="src\app\services\person.service.spec.ts" />
    <TypeScriptCompile Include="src\app\testing\array-helper.ts" />
    <TypeScriptCompile Include="src\app\testing\async-observable-helper.ts" />
    <TypeScriptCompile Include="src\app\testing\string-generation-helper.ts" />
  </ItemGroup>

  <ItemGroup>
    <None Update="API\Resources\AlexDow.jpg">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
    <None Update="API\Resources\ElvisPresley.jpg">
      <CopyToOutputDirectory>Always</CopyToOutputDirectory>
    </None>
  </ItemGroup>

  <Target Name="EnsureNode">
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
  </Target>
  <Target Name="EnsureAngularCli">
    <Exec Command="npm install -g @angular/cli" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Angular CLI failed to install but is required to build this project. To continue, please install Angular CLI from https://cli.angular.io/." />
  </Target>
  <Target Name="ReleaseRunNgBuild" BeforeTargets="Build">
    <CallTarget Targets="EnsureNode" />
    <CallTarget Targets="EnsureAngularCli" />
    <Message Importance="high" Text="Install packages..." />
    <Exec Command="npm install" />
    <Message Importance="high" Text="Rebuilding node-sass binding..." />
    <Exec Command="npm rebuild node-sass" />
    <Message Importance="high" Text="Performing ng build..." />
    <Exec Command="npm run-script build-ahead" />
  </Target>

</Project>
