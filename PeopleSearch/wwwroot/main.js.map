{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/address-form/address-form.component.html","webpack:///./src/app/address-form/address-form.component.ts","webpack:///./src/app/address.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/image.service.ts","webpack:///./src/app/interest-list/interest-list.component.html","webpack:///./src/app/interest-list/interest-list.component.ts","webpack:///./src/app/interest.ts","webpack:///./src/app/interests-form/interests-form.component.html","webpack:///./src/app/interests-form/interests-form.component.ts","webpack:///./src/app/people/people.component.html","webpack:///./src/app/people/people.component.ts","webpack:///./src/app/person-card/person-card.component.html","webpack:///./src/app/person-card/person-card.component.ts","webpack:///./src/app/person-detail/person-detail.component.html","webpack:///./src/app/person-detail/person-detail.component.ts","webpack:///./src/app/person-form/person-form.component.html","webpack:///./src/app/person-form/person-form.component.ts","webpack:///./src/app/person-list/person-list.component.html","webpack:///./src/app/person-list/person-list.component.ts","webpack:///./src/app/person-search/person-search.component.html","webpack:///./src/app/person-search/person-search.component.ts","webpack:///./src/app/person.service.ts","webpack:///./src/app/person.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","<div class=\"container\">\r\n  <div class=\"form-group row\">\r\n    <label class=\"col-sm-2 col-form-label\" for=\"address1\">Address 1</label>\r\n    <div class=\"col-sm-10\">\r\n      <input type=\"text\" class=\"form-control\" id=\"address1\"\r\n             [(ngModel)]=\"address.address1\" name=\"address1\">\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"form-group row\">\r\n    <label class=\"col-sm-2 col-form-label\" for=\"address2\">Address 2</label>\r\n    <div class=\"col-sm-10\">\r\n      <input type=\"text\" class=\"form-control\" id=\"address2\"\r\n             required\r\n             [(ngModel)]=\"address.address2\" name=\"address2\">\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"form-group row\">\r\n    <label class=\"col-sm-2 col-form-label\" for=\"city\">City</label>\r\n    <div class=\"col-sm-10\">\r\n      <input type=\"text\" class=\"form-control\" id=\"city\"\r\n             required\r\n             [(ngModel)]=\"address.city\" name=\"city\">\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"form-group row\">\r\n    <label class=\"col-sm-2 col-form-label\" for=\"state\">State</label>\r\n    <div class=\"col-sm-10\">\r\n      <select name=\"state\" class=\"form-control\" id=\"state\"\r\n              required [(ngModel)]=\"address.state\">\r\n        <option *ngFor=\"let state of stateCodeKeys()\" [value]=\"stateCodes[state]\">{{state}}</option>\r\n      </select>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"form-group row\">\r\n    <label class=\"col-sm-2 col-form-label\" for=\"zip\">Zip</label>\r\n    <div class=\"col-sm-10\">\r\n      <input type=\"text\" class=\"form-control\" id=\"zip\"\r\n             required\r\n             [(ngModel)]=\"address.zip\" name=\"zip\">\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, Input } from '@angular/core';\n\nimport { Address, StateCodes } from '../address';\n\n@Component({\n  selector: 'app-address-form',\n  templateUrl: './address-form.component.html',\n  styleUrls: ['./address-form.component.scss']\n})\nexport class AddressFormComponent implements OnInit {\n  @Input() address: Address;\n\n  stateCodes = StateCodes;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  stateCodeKeys(): string[] {\r\n    return Object.keys(StateCodes);\r\n  }\n}\n","export enum StateCodes {\r\n  AL,\r\n  AK,\r\n  AZ,\r\n  AR,\r\n  CA,\r\n  CO,\r\n  CT,\r\n  DE,\r\n  DC,\r\n  FL,\r\n  GA,\r\n  HI,\r\n  ID,\r\n  IL,\r\n  IN,\r\n  IA,\r\n  KS,\r\n  KY,\r\n  LA,\r\n  ME,\r\n  MD,\r\n  MA,\r\n  MI,\r\n  MN,\r\n  MS,\r\n  MO,\r\n  MT,\r\n  NE,\r\n  NV,\r\n  NH,\r\n  NJ,\r\n  NM,\r\n  NY,\r\n  NC,\r\n  ND,\r\n  OH,\r\n  OK,\r\n  OR,\r\n  PA,\r\n  RI,\r\n  SC,\r\n  SD,\r\n  TN,\r\n  TX,\r\n  UT,\r\n  VT,\r\n  VA,\r\n  WA,\r\n  WV,\r\n  WI,\r\n  WY,\r\n}\r\n\r\nexport class Address {\r\n  id: number;\r\n  address1: string;\r\n  address2: string;\r\n  city: string;\r\n  state: StateCodes;\r\n  zip: string;\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { PeopleComponent } from './people/people.component';\nimport { PersonDetailComponent } from './person-detail/person-detail.component';\n\nconst routes: Routes = [\r\n  { path: '', redirectTo: '/people', pathMatch: 'full' },\n  { path: 'detail/:id', component: PersonDetailComponent },\n  { path: 'detail/new', component: PersonDetailComponent },\n  { path: 'people', component: PeopleComponent }\n]\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes) ],\n  exports: [ RouterModule ]\n})\nexport class AppRoutingModule { }\n","<div class=\"container\">\r\n  <h1>{{ title }}</h1>\r\n  <router-outlet></router-outlet>\r\n</div>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'People Search App';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { PeopleComponent } from './people/people.component';\r\nimport { PersonDetailComponent } from './person-detail/person-detail.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { PersonSearchComponent } from './person-search/person-search.component';\nimport { PersonFormComponent } from './person-form/person-form.component';\nimport { PersonListComponent } from './person-list/person-list.component';\nimport { AddressFormComponent } from './address-form/address-form.component';\nimport { InterestListComponent } from './interest-list/interest-list.component';\nimport { InterestsFormComponent } from './interests-form/interests-form.component';\nimport { PersonCardComponent } from './person-card/person-card.component';\r\n\r\nlibrary.add(faSpinner);\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    PeopleComponent,\r\n    PersonDetailComponent,\r\n    PersonSearchComponent,\r\n    PersonFormComponent,\r\n    PersonListComponent,\r\n    AddressFormComponent,\r\n    InterestListComponent,\r\n    InterestsFormComponent,\r\n    PersonCardComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    FontAwesomeModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { catchError, } from 'rxjs/operators';\r\n\r\nimport { Image } from './image';\r\n\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ImageService {\r\n  private imagesUrl = 'api/images';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getImageUrl(id: number): string {\r\n    return id ? `${this.imagesUrl}/${id}` : '';\r\n  }\r\n\r\n  /**\r\n   * GET a image by id. Will be 404 if not found\r\n   * @param id - the id of the image\r\n   */\r\n  getImage(id: number): Observable<Image> {\r\n    const url = `${this.imagesUrl}/${id}`;\r\n\r\n    return this.http.get<Image>(url)\r\n      .pipe(\r\n        catchError(this.handleError<Image>(`getImage id=${id}`))\r\n      );\r\n  }\r\n\r\n  /**\r\n   * PUT - update the image on the server\r\n   * @param image - the image to update\r\n   */\r\n  updateImage(image: File, id: number): Observable<number> {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders(\r\n        //{ 'Content-Type': 'multipart/form-data' }\r\n      )\r\n    };\r\n\r\n    const url = id === 0 ? this.imagesUrl : `${this.imagesUrl}/?id=${id}`;\r\n\r\n    const formData: FormData = new FormData();\r\n    formData.append('file', image, image.name);\r\n    return this.http\r\n      .put(url, formData, httpOptions)\r\n      .pipe(\r\n        catchError(this.handleError<any>('updateImage'))\r\n      );\r\n  }\r\n\r\n  /**\r\n   * Handle Http operation that failed.\r\n   * Let the app continue.\r\n   * @param operation - name of the operation that failed\r\n   * @param result - optional value to return as the observable result\r\n   */\r\n  private handleError<T>(operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n      console.error(error);\r\n\r\n      return of(result as T);\r\n    };\r\n  }\r\n}\r\n","<!--<div class=\"container\">-->\r\n<div class=\"interest-group d-flex flex-row\">\r\n  <div *ngFor=\"let interest of interests\"\r\n       class=\"interest card d-flex flex-row\">\r\n    <div class=\"card-body\">{{interest.name}}</div>\r\n    <button class=\"btn btn-outline-danger\" title=\"delete interest\"\r\n            (click)=\"delete(interest)\">\r\n      x\r\n    </button>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, Input } from '@angular/core';\n\nimport { Interest } from '../interest';\n\n@Component({\n  selector: 'app-interest-list',\n  templateUrl: './interest-list.component.html',\n  styleUrls: ['./interest-list.component.scss']\n})\nexport class InterestListComponent implements OnInit {\n  @Input() interests: Interest[];\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\r\n  delete(interest: Interest): void {\r\n    this.interests.splice(this.interests.indexOf(interest), 1);\r\n  }\n}\n","export class Interest {\r\n  id: number\r\n  name: string\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"form-group row\">\r\n    <label class=\"col-sm-2 col-form-label\" for=\"name\">Add an Interest</label>\r\n    <div class=\"col-sm-10\">\r\n      <input type=\"text\" class=\"form-control\" id=\"name\" name=\"name\"\r\n             [(ngModel)]=\"interest.name\" (keyup.enter)=\"add()\">\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"form-group row\">\r\n    <div class=\"col-sm-2 col-form-label\"></div>\r\n    <div class=\"col-sm-10\">\r\n      <app-interest-list [interests]=\"interests\"></app-interest-list>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\nimport { Interest } from '../interest';\n\n@Component({\n  selector: 'app-interests-form',\n  templateUrl: './interests-form.component.html',\n  styleUrls: ['./interests-form.component.scss']\n})\nexport class InterestsFormComponent implements OnInit {\n  @Input() interests: Interest[];\n\n  interest = new Interest();\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  add() {\n    this.interest.name = this.interest.name.trim();\n\n    if (this.interest.name) {\n      this.interests.push(this.interest);\r\n      this.interest = new Interest();\r\n    }\r\n  }\n}\n","<app-person-search #personSearch (onSearch)=\"personList.loading = true\" (peopleFound)=\"personList.people = $event\"></app-person-search>\r\n<div class=\"form-group row\">\r\n  <div class=\"button-container col-sm-2 d-flex justify-content-end\">\r\n    <button class=\"btn btn-outline-primary \" routerLink=\"/detail/new\">+</button>\r\n  </div>\r\n  <div class=\"col-sm-10\">\r\n    <app-person-list #personList (onDelete)=\"personSearch.reload()\"></app-person-list>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-people',\r\n  templateUrl: './people.component.html',\r\n  styleUrls: ['./people.component.scss']\r\n})\r\nexport class PeopleComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n}\r\n","<div class=\"d-flex flex-row\">\r\n  <div class=\"col-md-3\">\r\n    <img *ngIf=\"imageUrl\" class=\"img-fluid img-thumbnail\" id=\"image\" src=\"{{imageUrl}}\">\r\n  </div>\r\n  <div class=\"col-md-4\" card-body>\r\n    <div class=\"d-flex flex-column\">\r\n      <strong>{{person.firstName}} {{person.lastName}}</strong>\r\n      <address *ngIf=\"person.address\">\r\n        {{person.address.address1}}\r\n        <br />\r\n        {{ person.address.address2 ? person.address.address2 : '' }}\r\n        <br *ngIf=\"person.address.address2\" />\r\n        {{ person.address.city }}, {{ stateCodes[person.address.state] }} {{ person.address.zip }}\r\n      </address>\r\n    </div>\r\n    <div class=\"list-unstyled row\">\r\n      <div class=\"col-md-6\">\r\n        <strong>Born</strong> {{person.birthDate | date:'shortDate'}}\r\n      </div>\r\n      <div *ngIf=\"person.deathDate\" class=\"col-md-6\">\r\n        <strong>Died</strong> {{person.deathDate | date:'shortDate'}}\r\n      </div>\r\n      <div class=\"col-md-6\">\r\n        <strong>Age</strong> {{getAge()}}\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"col-md-5\" card-body>\r\n    <strong>Interests</strong>\r\n    <div class=\"list-unstyled row\" *ngIf=\"person.interests\">\r\n      <div *ngFor=\"let interest of person.interests\" class=\"col-md-6\">\r\n        <div>{{interest.name}}</div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, Input } from '@angular/core';\n\nimport { ImageService } from '../image.service';\nimport { StateCodes } from '../address';\nimport { Person } from '../person';\n\n@Component({\n  selector: 'app-person-card',\n  templateUrl: './person-card.component.html',\n  styleUrls: ['./person-card.component.scss']\n})\nexport class PersonCardComponent implements OnInit {\n  @Input() person: Person;\n\n  imageUrl: string;\n\n  stateCodes = StateCodes;\n\n  constructor(\r\n    private imageService: ImageService\n  ) { }\n\n  ngOnInit() {\n    this.imageUrl = this.imageService.getImageUrl(this.person.imageId);\n  }\n\n  getAge() {\r\n    var endDate = this.person.deathDate ? Date.parse(this.person.deathDate) : Date.now();\r\n    var startDate = Date.parse(this.person.birthDate);\r\n    var ageDifMs = endDate - startDate;\r\n    var ageDate = new Date(ageDifMs); // miliseconds from epoch\r\n    return Math.abs(ageDate.getUTCFullYear() - 1970);\r\n  }\n\n  stateCodeKeys(): string[] {\r\n    return Object.keys(StateCodes);\r\n  }\n}\n","<div class=\"container\">\r\n  <h1>{{(isNew ? 'New Person' : person.firstName + ' ' + person.lastName)}}</h1>\r\n  <app-person-form [person]=\"person\" [imageUrl]=\"imageUrl\" #personForm></app-person-form>\r\n\r\n  <div class=\"btn-group float-right\">\r\n    <button class=\"btn btn-outline-primary\" (click)=\"save()\" [disabled]=\"isSaving\" *ngIf=\"!isSaving\">\r\n      Save\r\n    </button>\r\n    <button class=\"btn btn-outline-primary\" (click)=\"save()\" [disabled]=\"isSaving\" *ngIf=\"isSaving\">\r\n      <i class=\"fas fa-spinner fa-spin\"></i>\r\n    </button>\r\n    <button class=\"btn btn-outline-secondary\" (click)=\"goBack()\">{{(isNew ? 'Cancel' : 'Go Back')}}</button>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Location } from '@angular/common';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\nimport { PersonService } from '../person.service';\r\nimport { Person } from '../person';\r\nimport { ImageService } from '../image.service';\r\nimport { PersonFormComponent } from '../person-form/person-form.component';\r\n\r\n@Component({\r\n  selector: 'app-person-detail',\r\n  templateUrl: './person-detail.component.html',\r\n  styleUrls: ['./person-detail.component.scss']\r\n})\r\nexport class PersonDetailComponent implements OnInit {\r\n  @ViewChild(PersonFormComponent) personForm: PersonFormComponent;\r\n\r\n  person: Person = new Person();\r\n  imageUrl: string;\r\n\r\n  isNew: boolean;\r\n\r\n  isSaving: boolean = false;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private personService: PersonService,\r\n    private imageService: ImageService,\r\n    private location: Location\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.getPerson();\r\n  }\r\n\r\n  getPerson(): void {\r\n    const id = +this.route.snapshot.paramMap.get('id');\r\n    if (id) {\r\n      this.personService.getPerson(id)\r\n        .subscribe(person => {\r\n          this.person = person;\r\n          if (this.person.imageId) {\r\n            this.imageUrl = this.imageService.getImageUrl(this.person.imageId)\r\n          }\r\n        });\r\n    }\r\n    else {\r\n      this.isNew = true;\r\n    }\r\n  }\r\n\r\n  save(): void {\r\n    this.isSaving = true;\r\n    if (this.personForm.image) {\r\n      this.imageService.updateImage(this.personForm.image, this.person.imageId)\r\n        .subscribe((imageId) => {\r\n          this.person.imageId = imageId;\r\n          this.personService.updatePerson(this.person)\r\n            .subscribe(\r\n              () => this.goBack(),\r\n              () => this.isSaving = false\r\n            );\r\n        });\r\n    }\r\n    else {\r\n      this.personService.updatePerson(this.person)\r\n        .subscribe(\r\n          () => this.goBack(),\r\n          () => this.isSaving = false\r\n        );\r\n    }\r\n  }\r\n\r\n  goBack(): void {\r\n    this.location.back();\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"form-group\">\r\n    <div class=\"image-container col-sm-4\">\r\n      <img *ngIf=\"imageUrl || imageString\" class=\"img-fluid img-thumbnail\" id=\"image\" name=\"image\" src=\"{{imageString || imageUrl}}\">\r\n    </div>\r\n    <div class=\"input-group mb-3\">\r\n      <div class=\"input-group-prepend\">\r\n        <span class=\"input-group-text\">Choose an image</span>\r\n      </div>\r\n      <div class=\"custom-file\">\r\n        <input type=\"file\" class=\"custom-file-input\" id=\"imageInput\" accept=\"image/*\"\r\n               (change)=\"processImage(imageInput)\" name=\"imageInput\" #imageInput>\r\n        <label class=\"custom-file-label\" for=\"image\">{{image ? image.name : 'Choose image'}}</label>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"form-group row\">\r\n    <label class=\"col-sm-2 col-form-label\" for=\"firstName\">First name</label>\r\n    <div class=\"col-sm-10\">\r\n      <input type=\"text\" class=\"form-control\" id=\"firstName\"\r\n             [(ngModel)]=\"person.firstName\" name=\"firstName\">\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"form-group row\">\r\n    <label class=\"col-sm-2 col-form-label\" for=\"lastName\">Last name</label>\r\n    <div class=\"col-sm-10\">\r\n      <input type=\"text\" class=\"form-control\" id=\"lastName\"\r\n             required\r\n             [(ngModel)]=\"person.lastName\" name=\"lastName\">\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"form-group row\">\r\n    <label class=\"col-sm-2 col-form-label\" for=\"birthDate\">Birth date</label>\r\n    <div class=\"col-sm-10\">\r\n      <input type=\"date\" class=\"form-control\" id=\"birthDate\" name=\"birthDate\"\r\n             [value]=\"person.birthDate | date:'shortDate'\" (input)=\"person.birthDate=$event.target.value\" />\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"form-group row\">\r\n    <label class=\"col-sm-2 col-form-label\" for=\"deathDate\">Death date</label>\r\n    <div class=\"col-sm-10\">\r\n      <input type=\"date\" class=\"form-control\" id=\"deathDate\" name=\"deathDate\"\r\n             [value]=\"person.deathDate | date:'shortDate'\" (input)=\"processDate($event)\" />\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"form-group\">\r\n    <h2 for=\"Address\">Address</h2>\r\n    <app-address-form [address]=\"person.address\"></app-address-form>\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <h2 for=\"interests\">Interests</h2>\r\n    <app-interests-form [interests]=\"person.interests\"></app-interests-form>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, Input } from '@angular/core';\n\nimport { Person } from '../person';\n\n@Component({\n  selector: 'app-person-form',\n  templateUrl: './person-form.component.html',\n  styleUrls: ['./person-form.component.scss']\n})\nexport class PersonFormComponent implements OnInit {\n  @Input() person: Person;\n  @Input() imageUrl: string;\n\n  image: File;\n  imageString: string;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\r\n\r\n  processImage(imageInput: any) {\r\n    this.image = imageInput.files[0];\r\n    \r\n    var fr = new FileReader();\r\n    fr.onload = () => this.imageString = fr.result as string;\r\n    fr.readAsDataURL(this.image);\n  }\n\n  processDate(event: any) {\n    this.person.deathDate = event.target.value;\r\n  }\n}\n","<div class=\"list-group d-flex justify-content-center\">\r\n  <div class=\"fa-3x d-flex justify-content-center\" *ngIf=\"loading; else peopleList\">\r\n    <i class=\"fas fa-spinner fa-spin\"></i>\r\n  </div>\r\n  <ng-template #peopleList>\r\n      <div class=\"person-item btn-group\" *ngFor=\"let person of _people\">\r\n        <button class=\"btn btn-outline-secondary flex-grow-1 text-left\" routerLink=\"/detail/{{person.id}}\">\r\n          <app-person-card [person]=\"person\"></app-person-card>\r\n        </button>\r\n        <button class=\"btn btn-outline-danger right\" title=\"delete person\"\r\n                (click)=\"delete(person)\">\r\n          x\r\n        </button>\r\n      </div>\r\n  </ng-template>\r\n</div>\r\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { faSpinner } from '@fortawesome/fontawesome-free';\n\nimport { Person } from '../person';\nimport { PersonService } from '../person.service';\n\n@Component({\n  selector: 'app-person-list',\n  templateUrl: './person-list.component.html',\n  styleUrls: ['./person-list.component.scss']\n})\nexport class PersonListComponent implements OnInit {\r\n  @Output() onDelete = new EventEmitter<any>();\r\n\r\n  faSpinner = faSpinner;\r\n  loading: boolean;\r\n\r\n  private _people: Person[];\n  set people(value: Person[]) {\n    this._people = value;\r\n    this.loading = false;\r\n  }\n\n  constructor(private personService: PersonService) { }\n\n  ngOnInit() {\n  }\n  \r\n  delete(person: Person): void {\r\n    this.personService.deletePerson(person).subscribe();\r\n    this.onDelete.emit();\r\n  }\n}\n","<div>\r\n  <div class=\"form-group row\">\r\n    <label class=\"col-sm-2 col-form-label\" for=\"name\">Search by Name</label>\r\n    <div class=\"col-sm-10\">\r\n      <input #searchBox type=\"text\" class=\"form-control\" id=\"name\" name=\"name\"\r\n             (keyup)=\"search(searchBox.value)\">\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, Output, EventEmitter, ViewChild, ElementRef } from '@angular/core';\r\n\r\nimport { Subject } from 'rxjs';\r\n\r\nimport {\r\n  debounceTime, switchMap\r\n} from 'rxjs/operators';\r\n\r\nimport { Person } from '../person';\r\nimport { PersonService } from '../person.service';\r\n\r\n@Component({\r\n  selector: 'app-person-search',\r\n  templateUrl: './person-search.component.html',\r\n  styleUrls: ['./person-search.component.scss']\r\n})\r\nexport class PersonSearchComponent implements OnInit {\r\n  @Output() peopleFound = new EventEmitter<Person[]>();\r\n  @Output() onSearch = new EventEmitter();\r\n\r\n  @ViewChild('searchBox') searchBox: ElementRef;\r\n\r\n  private searchTerms = new Subject<string>();\r\n\r\n  constructor(private personService: PersonService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.searchTerms.pipe(\r\n      // wait 300ms after each keystroke before considering the term\r\n      debounceTime(300),\r\n\r\n      // switch to new search observable each time the term changes\r\n      switchMap((term: string) => this.personService.searchPeople(term)),\r\n    ).subscribe(people => this.peopleFound.emit(people));\r\n\r\n    this.search('');\r\n\r\n  }\r\n\r\n  // Push a search term into the observable stream.\r\n  search(term: string): void {\r\n    this.searchTerms.next(term);\r\n    this.onSearch.emit();\r\n  }\r\n\r\n  reload(): void {\r\n    this.search(this.searchBox.nativeElement.value);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\n\r\nimport { Person } from './person';\r\n\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PersonService {\r\n  private peopleUrl = 'api/people';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  /** GET all people from the server */\r\n  getPeople(): Observable<Person[]> {\r\n    return this.http.get<Person[]>(this.peopleUrl)\r\n      .pipe(\r\n        catchError(this.handleError('getPeople', []))\r\n      );\r\n  }\r\n\r\n  /**\r\n   *  GET a list of people matching the searchString.\r\n   * @param searchString - the string to search by\r\n   */\r\n  searchPeople(searchString: string): Observable<Person[]> {\r\n    const url = `${this.peopleUrl}/?searchString=${searchString}`;\r\n\r\n    return this.http.get<Person[]>(url)\r\n      .pipe(\r\n        catchError(this.handleError('searchPeople', []))\r\n      );\r\n  }\r\n\r\n  /**\r\n   * GET a person by id. Will be 404 if not found\r\n   * @param id - the id of the person\r\n   */\r\n  getPerson(id: number): Observable<Person> {\r\n    const url = `${this.peopleUrl}/${id}`;\r\n\r\n    return this.http.get<Person>(url)\r\n      .pipe(\r\n        catchError(this.handleError<Person>(`getPerson id=${id}`))\r\n      );\r\n  }\r\n\r\n  /**\r\n   * GET a person by id. Return `undefined` when id not found\r\n   * @param id - the id of the person\r\n   */\r\n  getPersonNo404<Data>(id: number): Observable<Person> {\r\n    const url = `${this.peopleUrl}/?id=${id}`;\r\n    return this.http.get<Person[]>(url)\r\n      .pipe(\r\n        map(people => people[0]), // returns a {0|1} element array\r\n        catchError(this.handleError<Person>(`getPerson id=${id}`))\r\n      );\r\n  }\r\n\r\n  /**\r\n   * PUT - update the person on the server\r\n   * @param person - the person to update\r\n   */\r\n  updatePerson(person: Person): Observable<any> {\r\n    return this.http.put(this.peopleUrl, person, httpOptions)\r\n      .pipe(\r\n      catchError(this.handleError<any>('updatePerson'))\r\n      );\r\n  }\r\n\r\n  /**\r\n   * POST a new person to the server\r\n   * @param person - the person to add\r\n   */\r\n  addPerson(person: Person): Observable<Person> {\r\n\r\n    return this.http.post<Person>(this.peopleUrl, person, httpOptions)\r\n      .pipe(\r\n        catchError(this.handleError<Person>('addPerson'))\r\n      );\r\n  }\r\n\r\n  /**\r\n   * DELETE a person from the server\r\n   * @param person - the person or id of the person to delete\r\n   */\r\n  deletePerson(person: Person | number): Observable<any> {\r\n    const id = typeof person === 'number' ? person : person.id;\r\n    const url = `${this.peopleUrl}/${id}`;\r\n\r\n    return this.http.delete<Person>(url, httpOptions)\r\n      .pipe(\r\n        catchError(this.handleError<Person>('deletePerson'))\r\n      );\r\n  }\r\n\r\n  /**\r\n   * Handle Http operation that failed.\r\n   * Let the app continue.\r\n   * @param operation - name of the operation that failed\r\n   * @param result - optional value to return as the observable result\r\n   */\r\n  private handleError<T>(operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n      console.error(error);\r\n\r\n      return of(result as T);\r\n    };\r\n  }\r\n}\r\n","import { Address } from './address';\nimport { Interest } from './interest';\nimport { Image } from './image';\n\nexport class Person {\n  id: number = 0;\n  imageId: number = 0;\n  firstName: string = '';\n  lastName: string = '';\n  birthDate: string = '';\n  deathDate: string = '';\n  address: Address = new Address();\n  interests: Interest[] = [];\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}